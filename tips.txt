



22 сделать
20 













korostelev
b3kRj3j
10.4.0.80

Анонимный Maping


Файлы:


inode:

Системный вызов open(2) открывает файл, то есть ассоциирует файловый дескриптор с
обычным или специальным файлом(берется минимальное  доступное число).Файловый дескриптор представляет
собой небольшое неотриц число.Дескрипторы нужны для того , чтобы каждый раз не искать файл по имени.
256 максимум по умолчанию

Права доступа:


Вызов open:
Информация об открытых файлах хранится в ядре UNIX. Таблица файловых дескрипторов,
размещенная в пользовательской области процесса, содержит указатели на системные
структуры, описывающие файл. Сами эти структуры могут разделяться несколькими
процессами, и поэтому находятся в разделяемой памяти ядра за пределами пользовательской
области. Файловый дескриптор — это число в диапазоне от 0 до MAX_OPEN-1, которое
является индексом в таблице файловых дескрипторов.

Системные файловые структуры содержат информацию о конкретном открытом файле. Для
каждого вызова open(2) выделяется собственная структура, даже если два разных вызова
открыли один и тот же файл на диске.

Ядро
----------

----------
user area:
таблица дескрипторов
----------

--------
разделяемая память ядра:
системные структуры, описывающие файл
--------
----------

В структуре содержится следующая информация:

СОДЕРЖИТ НОМЕР ИНОДА
ДУДОС дескрипторов

. указатель на текущую позицию в файле. Этот указатель изменяется на
прочитанное/записанное количество байт при каждом вызове read(2) и write(2). Кроме
того, позицию в файле можно установить явно вызовом lseek(2).
. копия флагов открытия. Эти флаги передаются вторым аргументом open(2).
. счетчик ссылок. Это число различных файловых дескрипторов из одной или
различных пользовательских областей, которые совместно используют данную
системную структуру. Процесс может создавать новые дескрипторы, указывающие на
имеющиеся структуры (ранее открытые файлы), системным вызовом dup(2). Кроме
того, при создании нового процесса, он наследует все открытые родителем файлы —
это соответствует ссылкам на одну структуру из разных пользовательских областей.
. указатель на структуру информации о файле (образ инода в памяти).
Структура информации о файле имеет следующее строение:
. номер устройства, на котором размещен файл, и номер инода
. пользовательский идентификатор владельца файла и идентификатор группы файла.
. счетчик ссылок - количество файловых дескрипторов, ссылающихся на данную
структуру.
. связи – количество записей в директориях, указывающих на данный файл.
. тип файла – обычный, директория, специальный файл и пр.
для специальных файлов устройств - «старшее» (major) и «младшее» (minor) числа и
указатель на минорную запись устройства; «Старшее» число идентифицирует
драйвер, а «младшее» - номер устройства, управляемого этим драйвером. Минорная
запись (minor record) — системная структура данных, описывающая устройство, и
содержащая блок переменных состояния устройства и указатели на функции
драйвера.
. права доступа данного файла.
. размер файла в байтах.
временные штампы создания файла, последней модификации и последнего доступа к
файлу.
. список номеров блоков для блоков данных на диске.



Файлы данного типа хранят именованные ссылки на другие файлы. Имя файла, находящегося в каталоге, в действительности хранится в родительском каталоге, а не в самом файле.

В ОС Linux имеются так называемые специальные каталоги. Специальные каталоги, такие как «.» и «..», обозначают, соответственно, текущий рабочий каталог и его родительский каталог.



как работает select


Дучков Антон Альбертович
Разработка «умного» сейсмического датчика для мониторинга на базе решений Интернета вещей актуальна?
Тема актуальна. Включает программирования микроспроцессоров для аппаратуры (регистрация данных, первичная обработка) + организация удаленного управления, передачи данных. Интерес к разводке плат был бы идеален, но не обязателен.    

